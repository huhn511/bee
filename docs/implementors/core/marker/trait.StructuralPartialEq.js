(function() {var implementors = {};
implementors["bee_ledger"] = [{"text":"impl StructuralPartialEq for ConflictReason","synthetic":false,"types":[]}];
implementors["bee_message"] = [{"text":"impl StructuralPartialEq for MessageId","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for LedgerIndex","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for MilestoneIndex","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for MilestoneKeyRange","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Milestone","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for HashedIndex","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for IndexationPayload","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for MilestonePayloadEssence","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for MilestonePayload","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for ReceiptPayload","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for TransactionPayloadEssence","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for TreasuryInput","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for UTXOInput","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Input","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Ed25519Address","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Address","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Bech32Address","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for OutputId","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for SignatureLockedDustAllowanceOutput","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for SignatureLockedSingleOutput","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for TreasuryOutput","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Output","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for TransactionId","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for TreasuryTransactionPayload","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for ReferenceUnlock","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Ed25519Signature","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for SignatureUnlock","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for UnlockBlock","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for TransactionPayload","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Payload","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for SolidEntryPoint","synthetic":false,"types":[]}];
implementors["bee_network"] = [{"text":"impl StructuralPartialEq for Origin","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Command","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for PeerRelation","synthetic":false,"types":[]}];
implementors["bee_protocol"] = [{"text":"impl StructuralPartialEq for Header","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for MessageRequesterWorkerEvent","synthetic":false,"types":[]}];
implementors["bee_rest_api"] = [{"text":"impl StructuralPartialEq for LedgerInclusionStateDto","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for RelationDto","synthetic":false,"types":[]}];
implementors["bee_snapshot"] = [{"text":"impl StructuralPartialEq for Kind","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for SnapshotInfo","synthetic":false,"types":[]}];
implementors["bee_storage_rocksdb"] = [{"text":"impl StructuralPartialEq for StorageHealth","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for StorageVersion","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for System","synthetic":false,"types":[]}];
implementors["bee_tangle"] = [{"text":"impl StructuralPartialEq for Flags","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()